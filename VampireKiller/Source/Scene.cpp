#include "Scene.h"
#include "Globals.h"
#include <stdio.h>

Scene::Scene()
{   
	level = nullptr;

	camera.target = { 0, 0 };				//Center of the screen
	camera.offset = { 0, 0 };	            //Offset from the target (center of the screen) {0,MARGIN_GUI_Y}
	camera.rotation = 0.0f;					//No rotation
	camera.zoom = 1.0f;						//Default zoom

	debug = DebugMode::OFF;
}
Scene::~Scene()
{
	if (level != nullptr)
	{
		level->Release();
		delete level;
		level = nullptr;
	}
}
AppStatus Scene::Init()
{
	//Create level 
	level = new TileMap();
	
	if (level == nullptr)
	{
		LOG("Failed to allocate memory for Level");
		return AppStatus::ERROR;
	}
	//Initialise level
	if (level->Initialise() != AppStatus::OK)
	{
		LOG("Failed to initialise Level");
		return AppStatus::ERROR;
	}
	//Load level
	if (LoadLevel(1) != AppStatus::OK)
	{
		LOG("Failed to load Level 1");
		return AppStatus::ERROR;
	}
	

	return AppStatus::OK;
}
AppStatus Scene::LoadLevel(int stage)
{
	int size;
	if (stage == 0)
	{
		//cargar la imagen de la cinematica inicial
	}
	else if (stage == 1)
	{
		size = LEVEL_WIDTH * LEVEL_HEIGHT;
		int map[] = {
				 
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				38,  39,  40,  41,  38,  39,  40,  41,  38,  39,  40,  41,  38,  39,  40,  41,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				34,  35,  36,  37,  34,  35,  36,  37,  34,  35,  36,  37,  34,  35,  36,  37,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				30,  31,  32,  33,  30,  31,  32,  33,  30,  31,  32,  33,  30,  31,  32,  33,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
			    26,  27,  28,  29,  26,  27,  28,  29,  26,  27,  28,  29,  26,  27,  28,  29,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				22,  23,  24,  25,  22,  23,  24,  25,  22,  23,  24,  25,  22,  23,  24,  25,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				18,  16,  15,  14,  17,  19,  18,  21,  18,  19,  20,  21,  17,  19,  20,  21,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				10,  11,  75,  76,   0,  12,  10,  12,  10,  12,  10, 251,   0,  12,  10,  12,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 3, 250,  73,  74, 250, 250,   4, 250,   4, 250,   4, 250, 250, 250,   3, 307,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 2,   2,  70,  71,  72,   2,   2,   2,   2,   2,   2,   2,  72,   2,   2,   2,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
		};
		level->Load(map, LEVEL_WIDTH, LEVEL_HEIGHT);
	
	}
	else if (stage == 2)
	{
		size = LEVEL_WIDTH * LEVEL_HEIGHT;
		int map[] = {
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				38,  39,  40,  41,  38,  39,  40,  41,  38,  39,  40,  41,  38,  39,  40,  41,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				34,  35,  36,  37,  34,  35,  36,  37,  34,  35,  36,  37,  34,  35,  36,  37,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				30,  31,  32,  33,  30,  31,  32,  33,  30,  31,  32,  33,  30,  31,  32,  33,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				26,  27,  28,  29,  26,  27,  28,  29,  26,  27,  28,  29,  26,  27,  28,  29,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				22,  23,  24,  25,  22,  23,  24,  25,  22,  23,  24,  25,  22,  23,  24,  25,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				18,  16,  15,  14,  17,  19,  18,  21,  18,  19,  20,  21,  17,  19,  20,  21,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				10,  11,  75,  76,   0,  12,  10,  12,  10,  12,  10, 251,   0,  12,  10,  12,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 3, 250,  73,  74, 250, 250,   4, 250,   4, 250,   4, 250, 250, 250,   3, 308,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				309,   2,  70,  71,  72,   2,   2,   2,   2,   2,   2,   2,  72,   2,   2,   2,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
		};
		level->Load(map, LEVEL_WIDTH, LEVEL_HEIGHT);
	}
	else if (stage == 3)
	{
		size = LEVEL_WIDTH * LEVEL_HEIGHT;
		int map[] = {
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				38,  39,  40,  41,  38,  39,  40,  41,  38,  39,  42,  43,  44,  43,  44,  43,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				34,  35,  36,  37,  34,  35,  36,  37,  34,  35,  50,  46,  47,  48,  48, 253,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				30,  31,  32,  33,  30,  31,  32,  33,  30,  31,  50,  51,  52,   53, 48,  54,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				26,  27,  28,  29,  26,  27,  28,  29,  26,  27,  50,  55,  56,  300,  57, 253,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				22,  23,  24,  25,  22,  23,  24,  25,  22,  23,  50,  58,  59,  300,  60,  61,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				18,  16,  15,  14,  17,  19,  18,  21,  18,  19,  50,  55,  56,  300,  57, 253,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				10,  11,  75,  76,   0,  12,  10,  12,  10,  12,  50,  58,  59,  300,  60,  61,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 3, 250,  73,  74, 250, 250,   4, 250,   4, 250,  62,  63,  64,  300,  65,  66,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				310,   2,  70,  71,  72,   2,   2,   2,   2,   2,  62,  63,  64,  300,  65,  66,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,   1,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
		};
		level->Load(map, LEVEL_WIDTH, LEVEL_HEIGHT);
	} 
	else if (stage == 4)
	{
		size = LEVEL_WIDTH * LEVEL_HEIGHT;
		int map[] = {
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  80,  80,  81,  81,  86,  87,  88,  89,  81,  81,  86,  87,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
			    80,  80,  80,  80,  96,  97,  86,  87,  92,  93,  96,  97,  86,  87,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  80,  80,  98,  99,  86,  87,  81,  95,  98,  99,  86,  87,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  80,  80,  81,  81,  86,  87,  90,  91,  81,  81,  86,  87,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  81,  81,  80,  80,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  80,  80,  81,  81,  86,  87,  81,  81,  81,  81,  86,  87,  92,  93,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
			    80,  80,  80,  80,  81,  81,  86,  87,  81,  81,  81,  81,  86,  87,  94,  95,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				92,  93,  81,  81,  96,  97,  86,  87,  81,  81,  81,  81,  86,  87,  81, 301,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
			306,  95,  81,  81,  98,  99,  86,  87,  81,  81,  80,  80,  86,  87,  81, 301,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				88,  89,  81,  81,  90,  91,  86,  87,  81,  81,  90,  91,  86,  87,  88,  89,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,   80
		};
		level->Load(map, LEVEL_WIDTH, LEVEL_HEIGHT);
	}
	else if (stage == 5)
	{
		size = LEVEL_WIDTH * LEVEL_HEIGHT;
		int map[] = {
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  86,  87, 100, 101,  81,  81, 110,  81,  80,  80,  81,  81,  86,  87,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  86,  87,  81,  81,  81, 110,  96,  97,  80,  80,  81,  81,  86,  87,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  86,  87,  81,  81, 110,  81,  98,  99,  80,  80,  81,  81,  86,  87,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  86,  87,  81, 110,  90,  91,  81,  81,  80,  80,  90,  91,  86,  87,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  80,  80,  80,  80,  80,  80, 110,  80,  80,  80,  88,  89,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				92,  93,  86,  87,  81,  81,  81, 110,  81,  81,  80,  80,  88,  89,  86,  87,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				94,  95,  86,  87,  81,  81, 110,  81,  81,  81,  80,  80,  80,  80,  86,  87,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				96,  97,  86,  87,  81, 110,  90,  91,  96,  97,  80,  80,  92,  93,  86, 302,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
			   304,  99,  86,  87, 110,  81,  88,  89,  98,  99,  80,  80,  94,  95,  86, 302,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				90,  91,  86, 110,  81,  81,  88,  92,  90,  91,  80,  80,  81,  81,  86, 302,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,   80
		};
		level->Load(map, LEVEL_WIDTH, LEVEL_HEIGHT);
	}
	else if (stage == 6)
	{
		size = LEVEL_WIDTH * LEVEL_HEIGHT;
		int map[] = {
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				88,  89,  81,  81, 110,  81,  80,  80,  81,  81,  94,  95, 110,  81,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				92,  93,  81, 110,  81,  81,  80,  80,  96,  97,  81, 110,  81,  81,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				94,  95, 110,  81,  81,  81,  80,  80,  98,  99, 110,  81,  81,  81,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				81, 110,  90,  91,  81,  81,  80,  80,  81, 110,  81,  81,  81,  81,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  81,  81,  81,  81,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				92,  93,  81,  81,  86,  87,  92,  93,  81,  81,  81,  81,  88,  89,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				94,  95,  81,  81,  86,  87,  94,  95,  81,  81, 110,  80,  80,  80,  80,  80,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
			   305,  81,  81,  81,  86,  87,  81,  81,  81, 110,  90,  91,  81,  81,  96,  97,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
			   305,  81,  80,  80,  86,  87,  81,  81, 110,  81,  88,  89,  81,  81,  98, 303,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
			   305,  81,  90,  91,  86,  87,  81, 110,  81,  81,  88,  89,  81,  81,  90,  91,   0,   0,   0,   0,   0,	  0,   0,   0,   0,
				80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,  80,   80
		};
		level->Load(map, LEVEL_WIDTH, LEVEL_HEIGHT);
	}
	else
	{
		//Error level doesn't exist or incorrect level number
		LOG("Failed to load level, stage %d doesn't exist", stage);
		return AppStatus::ERROR;
	}
	return AppStatus::OK;
}
void Scene::HandleInputPlayer()
{
}
void Scene::Update()
{
	if (IsKeyPressed(KEY_TWO))
	{
		LoadLevel(2);
	}
	else if (IsKeyPressed(KEY_ONE))
	{
		LoadLevel(1);
	}
	else if (IsKeyPressed(KEY_THREE))
	{
		LoadLevel(3);
	}
	else if (IsKeyPressed(KEY_FOUR))
	{
		LoadLevel(4);
	}
	else if (IsKeyPressed(KEY_FIVE))
	{
		LoadLevel(5);
	}
	else if (IsKeyPressed(KEY_SIX))
	{
		LoadLevel(6);
	}
}
void Scene::Render()
{
	level->Render();
}
void Scene::Release()
{
	level->Release();
}